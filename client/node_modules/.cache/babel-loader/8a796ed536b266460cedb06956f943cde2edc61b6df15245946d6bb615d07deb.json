{"ast":null,"code":"var _jsxFileName = \"/home/anastasia/Documents/PHASE-4/Event-planning-App--group8/client/src/components/forms/LoginForm.js\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onSubmit\n}) => {\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: ({\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\",\n          className: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\",\n          className: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","LoginForm","onSubmit","validationSchema","object","email","string","required","password","min","initialValues","children","isSubmitting","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","component","disabled","_c","$RefreshReg$"],"sources":["/home/anastasia/Documents/PHASE-4/Event-planning-App--group8/client/src/components/forms/LoginForm.js"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst LoginForm = ({ onSubmit }) => {\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Email is required'),\n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n      .required('Password is required'),\n  });\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form className=\"login-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <Field type=\"email\" id=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" className=\"error\" />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Field type=\"password\" id=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\" className=\"error\" />\n          </div>\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            {isSubmitting ? 'Logging in...' : 'Login'}\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}