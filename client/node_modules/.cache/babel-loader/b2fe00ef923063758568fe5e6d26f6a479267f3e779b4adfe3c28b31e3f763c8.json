{"ast":null,"code":"var _jsxFileName = \"/home/anastasia/Documents/PHASE-4/Event-planning-App--group8/client/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.js\nimport React, { useState } from 'react';\nimport LoginForm from '../components/forms/LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const handleLogin = async values => {\n    setLoading(true);\n    console.log('Login values:', values);\n    try {\n      // Simulate API call (replace with actual backend endpoint)\n      setTimeout(() => {\n        console.log('Login successful (simulated)');\n        setLoading(false);\n        // Redirect or store authentication token here\n      }, 1000);\n    } catch (error) {\n      console.error('Login error:', error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login to Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Logging in...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","LoginForm","jsxDEV","_jsxDEV","LoginPage","_s","loading","setLoading","handleLogin","values","console","log","setTimeout","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/home/anastasia/Documents/PHASE-4/Event-planning-App--group8/client/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\nimport React, { useState } from 'react';\nimport LoginForm from '../components/forms/LoginForm';\n\nconst LoginPage = () => {\n  const [loading, setLoading] = useState(false);\n\n  const handleLogin = async (values) => {\n    setLoading(true);\n    console.log('Login values:', values);\n    \n    try {\n      // Simulate API call (replace with actual backend endpoint)\n      setTimeout(() => {\n        console.log('Login successful (simulated)');\n        setLoading(false);\n        // Redirect or store authentication token here\n      }, 1000);\n    } catch (error) {\n      console.error('Login error:', error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login to Your Account</h1>\n      <LoginForm onSubmit={handleLogin} />\n      {loading && <p>Logging in...</p>}\n    </div>\n  );\n};\n\nexport default LoginPage;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMQ,WAAW,GAAG,MAAOC,MAAM,IAAK;IACpCF,UAAU,CAAC,IAAI,CAAC;IAChBG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;IAEpC,IAAI;MACF;MACAG,UAAU,CAAC,MAAM;QACfF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3CJ,UAAU,CAAC,KAAK,CAAC;QACjB;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9Bf,OAAA,CAACF,SAAS;MAACkB,QAAQ,EAAEX;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnCZ,OAAO,iBAAIH,OAAA;MAAAW,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACb,EAAA,CA3BID,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}