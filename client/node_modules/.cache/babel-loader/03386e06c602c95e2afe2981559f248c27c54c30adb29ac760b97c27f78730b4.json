{"ast":null,"code":"var _jsxFileName = \"/home/anastasia/Documents/PHASE-4/Event-planning-App--group8/client/src/pages/EditEventPage.js\",\n  _s = $RefreshSig$();\n// src/pages/EditEventPage.js\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EventForm from '../components/forms/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditEventPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Mock event data for demonstration\n  const mockEvent = {\n    title: 'Sample Event',\n    description: 'This is a sample event description',\n    location: 'Sample Location',\n    date: '2024-12-31',\n    time: '19:00',\n    capacity: '100',\n    price: '50.00'\n  };\n  const handleEventSubmit = async values => {\n    setLoading(true);\n    setMessage('');\n    try {\n      // Simulate API call\n      setTimeout(() => {\n        setMessage('Event updated successfully!');\n        console.log('Event updated:', values);\n        setLoading(false);\n      }, 1000);\n    } catch (error) {\n      setMessage('Error updating event. Please try again.');\n      console.error('Event update error:', error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Edit Event #\", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      onSubmit: handleEventSubmit,\n      initialValues: mockEvent,\n      isEdit: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Updating event...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(EditEventPage, \"sNcTwVmg9+bxuW7Ofj6NDaujnqA=\", false, function () {\n  return [useParams];\n});\n_c = EditEventPage;\nexport default EditEventPage;\nvar _c;\n$RefreshReg$(_c, \"EditEventPage\");","map":{"version":3,"names":["React","useState","useParams","EventForm","jsxDEV","_jsxDEV","EditEventPage","_s","id","loading","setLoading","message","setMessage","mockEvent","title","description","location","date","time","capacity","price","handleEventSubmit","values","setTimeout","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","initialValues","isEdit","_c","$RefreshReg$"],"sources":["/home/anastasia/Documents/PHASE-4/Event-planning-App--group8/client/src/pages/EditEventPage.js"],"sourcesContent":["// src/pages/EditEventPage.js\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EventForm from '../components/forms/EventForm';\n\nconst EditEventPage = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Mock event data for demonstration\n  const mockEvent = {\n    title: 'Sample Event',\n    description: 'This is a sample event description',\n    location: 'Sample Location',\n    date: '2024-12-31',\n    time: '19:00',\n    capacity: '100',\n    price: '50.00'\n  };\n\n  const handleEventSubmit = async (values) => {\n    setLoading(true);\n    setMessage('');\n    \n    try {\n      // Simulate API call\n      setTimeout(() => {\n        setMessage('Event updated successfully!');\n        console.log('Event updated:', values);\n        setLoading(false);\n      }, 1000);\n    } catch (error) {\n      setMessage('Error updating event. Please try again.');\n      console.error('Event update error:', error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Edit Event #{id}</h1>\n      {message && <p style={{ color: 'green' }}>{message}</p>}\n      <EventForm \n        onSubmit={handleEventSubmit} \n        initialValues={mockEvent}\n        isEdit={true}\n      />\n      {loading && <p>Updating event...</p>}\n    </div>\n  );\n};\n\nexport default EditEventPage;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMY,SAAS,GAAG;IAChBC,KAAK,EAAE,cAAc;IACrBC,WAAW,EAAE,oCAAoC;IACjDC,QAAQ,EAAE,iBAAiB;IAC3BC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,MAAM,IAAK;IAC1CZ,UAAU,CAAC,IAAI,CAAC;IAChBE,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACF;MACAW,UAAU,CAAC,MAAM;QACfX,UAAU,CAAC,6BAA6B,CAAC;QACzCY,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,MAAM,CAAC;QACrCZ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdd,UAAU,CAAC,yCAAyC,CAAC;MACrDY,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3ChB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEL,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,GAAI,cAAY,EAACnB,EAAE;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACxBpB,OAAO,iBAAIN,OAAA;MAAG2B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAN,QAAA,EAAEhB;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvD1B,OAAA,CAACF,SAAS;MACR+B,QAAQ,EAAEb,iBAAkB;MAC5Bc,aAAa,EAAEtB,SAAU;MACzBuB,MAAM,EAAE;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EACDtB,OAAO,iBAAIJ,OAAA;MAAAsB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9CID,aAAa;EAAA,QACFJ,SAAS;AAAA;AAAAmC,EAAA,GADpB/B,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}